{"mappings":"AAAA,MAAMA,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,QAASF,SAASC,cAAc,gBAChCE,OAAQH,SAASC,cAAc,eAC/BG,SAAUJ,SAASC,cAAc,iBACjCI,YAAaL,SAASC,cAAc,kBAEtCK,QAAQC,IAAIT,EAAKO,aAEjBP,EAAKC,OAAOS,iBAAiB,UAI7B,SAAoBC,GAClBA,EAAGC,iBACH,IAAIC,EAAQC,OAAOd,EAAKI,QAAQW,OAChC,MAAMC,EAAYF,OAAOd,EAAKK,OAAOU,OAC/BE,EAAWjB,EAAKM,SAASS,MAK/B,GAHAG,EAAYlB,EAAKO,aACjBY,GAAWF,EAEPJ,GAAS,GAAKG,EAAY,GAAKC,EAAW,EAEV,YADlCG,MAAM,yCAIR,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAUI,IAC7BC,EAAcD,EAAGR,GACdU,MAAKC,IACJhB,QAAQC,IAAIe,EAAE,IAEfC,OAAMC,IACLlB,QAAQC,IAAIiB,EAAE,IAEfC,SAAQ,KACHR,EAAUE,IAAM,IAClBH,EAAYlB,EAAKO,aACjBY,GAAWE,E,IAIjBR,GAASG,C,IA/Bb,IAAIG,EAAU,EAmCd,SAASD,EAAYU,GACnBA,EAAIC,UAAYD,EAAIC,Q,CAGtB,SAASP,EAAcL,EAAUJ,GAC/B,OAAO,IAAIiB,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,uBAAqBd,QAAiBJ,OAG5CmB,EAAK,sBAAoBf,QAAeJ,MAAU,GAGtDA,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  formEl: document.querySelector('.form'),\n  delayEl: document.querySelector('[name=delay]'),\n  stepEl: document.querySelector('[name=step]'),\n  amountEl: document.querySelector('[name=amount]'),\n  btnGenerate: document.querySelector('[type=submit]')\n}\nconsole.log(refs.btnGenerate);\n\nrefs.formEl.addEventListener('submit', formSubmit);\n\nlet counter = 0;\n\nfunction formSubmit(ev) {\n  ev.preventDefault();\n  let delay = Number(refs.delayEl.value);\n  const delayStep = Number(refs.stepEl.value);\n  const position = refs.amountEl.value;\n\n  btnDisabled(refs.btnGenerate);\n  counter -= position;\n\n  if (delay <= 0 || delayStep < 0 || position < 0) {\n    alert('Заповніть поля корректними значеннями');\n    return\n  }\n\n  for (let i = 1; i <= position; i++) {\n    createPromise(i, delay)\n      .then(x => {\n        console.log(x);\n      })\n      .catch(y => {\n        console.log(y);\n      })\n      .finally(() => {\n        if (counter + i === 0) {\n          btnDisabled(refs.btnGenerate);\n          counter += i;\n        }\n      });\n\n    delay += delayStep;\n  }\n}\n\nfunction btnDisabled(btn) {\n  btn.disabled = !btn.disabled;\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    },\n      delay);\n  })\n}"],"names":["$47d4ff9957288465$var$refs","formEl","document","querySelector","delayEl","stepEl","amountEl","btnGenerate","console","log","addEventListener","ev","preventDefault","delay","Number","value","delayStep","position","$47d4ff9957288465$var$btnDisabled","$47d4ff9957288465$var$counter","alert","i","$47d4ff9957288465$var$createPromise","then","x","catch","y","finally","btn","disabled","Promise","resolve","reject","setTimeout","Math","random"],"version":3,"file":"03-promises.cb414a2a.js.map"}