{"mappings":"YAAA,IAAMA,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,QAASF,SAASC,cAAc,gBAChCE,OAAQH,SAASC,cAAc,eAC/BG,SAAUJ,SAASC,cAAc,iBACjCI,YAAaL,SAASC,cAAc,kBAEtCK,QAAQC,IAAIT,EAAKO,aAEjBP,EAAKC,OAAOS,iBAAiB,UAI7B,SAAoBC,G,mBAqCpB,SAAuBC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,uBAAwCK,OAAfR,EAAS,QAAYQ,OAANP,EAAM,OAGpDG,EAAK,sBAAqCI,OAAfR,EAAS,QAAYQ,OAANP,EAAM,M,GAGpDA,E,KAlCFQ,CAAcC,EAAGT,OACdU,MAAK,SAAAC,GACJhB,QAAQC,IAAIe,E,IAEbC,OAAM,SAAAC,GACLlB,QAAQC,IAAIiB,E,IAEbC,SAAQ,WACJC,EAAUN,IAAM,IACjBO,EAAY7B,EAAKO,aACjBqB,GAAWN,E,IAIjBT,OAASiB,S,EApBX,GARAnB,EAAGoB,iBACHlB,MAAQmB,OAAOhC,EAAKI,QAAQ6B,OAC5BH,UAAYE,OAAOhC,EAAKK,OAAO4B,OAC/BrB,SAAWZ,EAAKM,SAAS2B,MAEzBJ,EAAY7B,EAAKO,aACjBqB,GAAWhB,SAEPC,OAAS,GAAKiB,UAAY,GAAKlB,SAAW,EAE5C,YADAsB,MAAM,yCAIR,IAAK,IAAIC,EAAI,EAAGA,GAAKvB,SAAUuB,IAAGC,EAAAD,E,IAhBpC,IAAIP,EAAU,EAmCd,SAASC,EAAYQ,GACnBA,EAAIC,UAAYD,EAAIC,Q","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  formEl: document.querySelector('.form'),\n  delayEl: document.querySelector('[name=delay]'),\n  stepEl: document.querySelector('[name=step]'),\n  amountEl: document.querySelector('[name=amount]'),\n  btnGenerate: document.querySelector('[type=submit]')\n}\nconsole.log(refs.btnGenerate);\n\nrefs.formEl.addEventListener('submit', formSubmit);\n\nlet counter = 0;\n\nfunction formSubmit(ev) {\n  ev.preventDefault();\n  delay = Number(refs.delayEl.value);\n  delayStep = Number(refs.stepEl.value);\n  position = refs.amountEl.value;\n\n  btnDisabled(refs.btnGenerate);\n  counter -= position;\n\n  if (delay <= 0 || delayStep < 0 || position < 0) {\n    alert('Заповніть поля корректними значеннями');\n    return\n  }\n\n  for (let i = 1; i <= position; i++) {\n    createPromise(i, delay)\n      .then(x => {\n        console.log(x);\n      })\n      .catch(y => {\n        console.log(y);\n      })\n      .finally(() => {\n        if(counter + i === 0) {\n          btnDisabled(refs.btnGenerate);\n          counter += i;\n        }\n      });\n\n    delay += delayStep;\n  }\n}\n\nfunction btnDisabled(btn) {\n  btn.disabled = !btn.disabled;\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    },\n      delay);\n  })\n}"],"names":["$ce04d3a99e08e73b$var$refs","formEl","document","querySelector","delayEl","stepEl","amountEl","btnGenerate","console","log","addEventListener","ev","position","delay","Promise","resolve","reject","setTimeout","Math","random","concat","$ce04d3a99e08e73b$var$createPromise","i","then","x","catch","y","finally","$ce04d3a99e08e73b$var$counter","$ce04d3a99e08e73b$var$btnDisabled","delayStep","preventDefault","Number","value","alert","i1","_loop","btn","disabled"],"version":3,"file":"03-promises.ddb44d93.js.map"}